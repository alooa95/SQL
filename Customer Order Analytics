#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

/*How many orders were placed in January?
Remember to filter out the blank and incorrect order IDs like we did in the
"dealing with messy data" section of the previous lesson!*/
/*ANSWER: 9681*/

SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';


/*How many of those orders were for an iPhone?*/
/*ANSWER : 379*/
SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

/*Select the customer account numbers for all the orders that were placed in February.*/
SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';
/*OR*/
SELECT a.acctnum
FROM BIT_DB.customers a
INNER JOIN BIT_DB.FebSales b
ON a.order_id = b.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY a.acctnum;

/*Which product was the cheapest one sold in January, and what was the price?*/
/*ANSWER: AAA Batteries 4-pack 2.99*/
SELECT Product , price
FROM BIT_DB.JanSales
WHERE price = (SELECT MIN(price) FROM BIT_DB.JanSales)
GROUP BY Product;

/*What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).*/
SELECT Product , SUM(Quantity * price) as TotalRevenue
FROM BIT_DB.JanSales
WHERE Product <> ''
GROUP BY Product;

/*Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?*/
/*ANSWER: AA Batteries, 2 , 7.68*/
SELECT Product , Quantity , SUM(Quantity*price) AS TotalRevenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

/*How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?*/
SELECT COUNT(distinct cust.acctnum) , AVG(Feb.Quantity*Feb.price)AS Average
FROM customers cust
LEFT JOIN FebSales Feb
ON cust.order_id = Feb.orderID
WHERE order_id <> 'Order ID'
AND length(order_id) = 6
AND Feb.orderID <> ''
AND Feb.Quantity > 2;
